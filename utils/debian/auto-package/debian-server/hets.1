.TH HETS 1 "Sep 9, 2010"
.UC 5
.SH NAME
hets \- calls the Heterogenous Tool Set
.SH SYNOPSIS
.B hets
[OPTION...] file ... file
.TP
.B hets -update
.TP
.B hets -revert
.SH DESCRIPTION
Hets is a parsing, static analysis and proof management tool combining
various tools for different specification languages, thus providing a
tool for the heterogeneous specification language HetCASL. The structuring
constructs of this language are those of CASL, plus some new heterogeneous
constructs for indicating the language and for language translations. Hence,
Hets is based on a graph of logics and languages.
.SH OPTIONS
.TP
.B \-update
this switch doesn't start hets, but instead updates the entire application.
First available packages are checked, then latest builds of the hets binary,
as well as the latest version of the hets-library. This requires root access.
.TP
.B \-revert
this switch is used to revert to the previous version, once hets -update was
used. Notice that only the Hets binary is reverted. This requires root access.
.TP
.B \-v[0-5], \--verbose[=0-5]
sets the verbosity level, default is -v1. A good warning level is -v2
that also shows read and written files.
.TP
.B \-q, \--quiet
same as -v0, no output is sent to stdout.
.TP
.B \-V, \--version
prints version details and exits.
.TP
.B \-h, \--help, \--usage
prints help information and exits.
.TP
.B \-g, \--gui
starts the graphical user interface to show graphs. Without this (and the -I)
option hets will run in batch mode and process (aka analyse) all input files.
.TP
.B \-u, \--uncolored
uses no colors in shown graphs.
.TP
.B \-I, \--interactive
runs hets in interactive mode expecting input from the console after
all input files given as arguments have been processed.
If also the option -g is given a graph may pop up only after input has been
terminated using Ctrl-D.
.TP
.B \-p, \--just-parse
skips static analysis, just parses input files.
.TP
.B \-s, \--just-structured
skips basic i.e. logic specific analysis, just does structured analysis.
.TP
.B \-l \fILOGIC\fR, \fB\--logic=\fR\fILOGIC\fR
selects a logic if it is not given in source files, the default is CASL.
.TP
.B \-L \fIDIR\fR, \fB\--hets-libdirs=\fR\fIDIR\fR
manually sets the path to the library source directories.
Use a colon separated paths for multiple directories.
.TP
.B \-m \fIFILE\fR, \fB--modelSparQ=\fR\fIFILE\fR
sets lisp file for SparQ definitions (works for CASL only).
.TP
.B \-x, \--xml
uses xml packages (rather than plain text) to communicate.
.TP
.B \-X, \--server
start hets as web-server
.TP
.B \-c \fIHOSTNAME:PORT\fR, \fB--connect=\fR\fIHOSTNAME:PORT\fR
runs the interface with the -I option by comunicating via a connection
to the port.
.TP
.B \-s \fIPORT\fR, \fB--listen=\fR\fIPORT\fR
runs the interface with the -I option by listening to the port
.TP
.B \-i \fIITYPE\fR, \fB--input-type=\fR\fIITYPE\fR
manually sets the input type. Input file types can be one of: casl, het, owl,
hs, maude, elf, prf, omdoc, hpf, clf.
.TP
.B \-d \fISTRING\fR, \fB--dump=\fR\fISTRING\fR
dump internal data depending on \fISTRING\fR.
.TP
.B \-e \fIENCODING\fR, \fB--encoding=\fR\fIENCODING\fR
uses latin1 (default) or utf8 encoding for input and output files.
.TP
.B \-O \fIDIR\fR, \fB--output-dir=\fR\fIDIR\fR
manually sets the destination directory for output files.
.TP
.B \-o \fIOTYPES\fR, \fB--output-types=\fR\fIOTYPES\fR
sets the output types, default is nothing. Output file types can be one (or
more) of prf, env, owl, omdoc, xml, exp, hs, thy, comptable.xml,
(sig|th)[.delta], pp.(het|tex|xml), graph.(exp.dot|dot), dfg[.c], tptp[.c].
(Use a comma-separated list without blanks.)
.TP
.B \-R, \--recursive
produces output files (given via -o) also for imported libraries
.TP
.B \-A, \--apply-automatic-rule
applies automatic dev-graph strategy directly after static analysis.
.TP
.B \-N, \--normal-form
computes normal forms. This takes a long time.
.TP
.B \-n \fINSPECS\fR, \fB--named-specs=\fR\fINSPECS\fR
Create certain output files only for the given named specs given as
comma-separated list without blanks.
.TP
.B \-t \fITRANS\fR, \fB--translation=\fR\fITRANS\fR
translates all specifications (or those listed using the above -n option)
by the translation given as composition
via a colon-separated list without blanks.
.TP
.B \-a \fIANALYSIS\fR, \fB--casl-amalg=\fR\fIANALYSIS\fR
sets the CASL amalgamability options. The \fIANALYSIS\fR can be one (or more)
from none, sharing, cell, or colimit-thinness
as comma-separated list without blanks.
.PP
.SH "ENVIRONMENT VARIABLES"
.TP
.B HETS_LIB
defines paths to the hets libraries.
.TP
.B HETS_OWL_TOOLS
defines the path to the hets owl tools library.
.TP
.B HETS_ISABELLE_LIB
defines the path to the Isabelle library.
.TP
.B HETS_MAUDE_LIB
defines the path to the Maude Hets library
.TP
.B HETS_GMOC
defines the path to the Gmoc directory containing bin/gmoc and Configuration.xml
.TP
.B HETS_REDUCE
defines the path to the executable redcsl
.TP
.B HETS_APROVE
defines the path to AProVE.jar
.TP
.B HETS_ONTODMU
defines the path to OntoDMU.jar
.TP
.B HETS_JNI_LIBS
defines the path to the FaCT++JNI library directory if it is not /lib
.TP
.B PELLET_PATH
defines the path to the Pellet root directory.
.TP
.B TWELF_LIB
defines the path to the TWELF root directory.
.TP
.B MAUDE_LIB
defines the path to the MAUDE library directory.
.TP
.B HETS_HOLLIGHT_TOOLS
defines the path to the HolLight image.
.TP
Some of these variables are set inside the script
.B /usr/bin/hets
.BR
.SH "EXAMPLES"
.TP
.B hets -g -A /usr/lib/hets/hets-lib/Calculi/Space/RCCVerification.dol
Check if all nodes can be proven. Only one node is heterogeneous and needs
the Isabelle prover. Copy the file
/usr/lib/hets/hets-lib/RCCVerification_RCC_FO_in_MetricSpace_T.thy
to your working directory (with write access) to allow hets to reuse
the given proofs.
.TP
.B hets -g /usr/lib/hets/hets-lib/Basic/LinearAlgebra_II.casl
Check Edit/Prove/Automatic, followed by Edit/Undo.
.TP
.B hets -g -i owl /usr/lib/hets/hets-owl-tools/tests/wine.rdf
Check out the OWL parser.
.TP
.B hets -g /usr/lib/hets/hets-lib/TestSuite/Conservative/Nat.casl
Check conservativity of the link. This will result in "The link is mono".
.TP
.B hets -g /usr/lib/hets/hets-lib/Ontology/Examples/Family.dol
Check OWL conservativity checker on the Family <-> FamilyBase links. One
can be proven, while the other cannot.
.TP
.B hets -g -A /usr/lib/hets/hets-lib/HidingOWL.dol
Choose Edit/Consistency Checker and prove the goals.
.TP
.B hets -g /usr/lib/hets/hets-lib/HolLight/example_binom.hol
Import the full HolLight theory and a small lemma on binomials. You can
use the translation to Isabelle.
.BR
.SH "SEE ALSO"
.BR
.SH BUGS
.TP
For bugs report at hets-devel@mailhost.informatik.uni-bremen.de or use the trac http://trac.informatik.uni-bremen.de:8080/hets
.BR
.SH AUTHOR
.B hets
, the Heterogenous Tool Set is the work of University of Bremen
<hets@informatik.uni-bremen.de>. This manual page was written by
Corneliu-Claudiu Prodescu <cprodescu@googlemail.com> for the Debian GNU/Linux
system but may be used by others under the same license as
.B hets
itself. The complete user guide can be found at
.B /usr/share/doc/hets/UserGuide.pdf
.
